[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[project]
name = "levy-stable-jax"
version = "0.2.0"
authors = [
    {name = "Tim Hunter", email = "tjhunter@cs.stanford.edu"},
]
license = { text = "Apache 2 License" }
description = "Implementation of the Lévy stable distributions for Jax."
readme = "README.md"
requires-python = ">=3.9"
keywords = ["levy", "stable", "jax", "probability", "statistics"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "jax>=0.3",
    "numpy>=1.19",
    "scipy>=1.5",    
]


[project.optional-dependencies]
pymc = [
    "pymc>=5.13",
    "numpyro>=0.14"
]
inference = [
    "jaxopt>=0.8"
]

[project.urls]
Homepage = "https://github.com/tjhunter/levy-stable-jax"
Documentation = "https://github.com/tjhunter/levy-stable-jax"
Repository = "https://github.com/tjhunter/levy-stable-jax"

[tool.poetry]
packages = [{include = "levy_stable_jax", from="src"}]
name = "levy-stable-jax"
version = "0.2.0"
authors = ["Tim Hunter <tjhunter@cs.stanford.edu>"]
description = "Implementation of the Lévy alpha-stable distributions for Jax."
readme = "README.md"
license = "Apache 2.0"
homepage = "https://github.com/tjhunter/levy-stable-jax"
documentation = "https://levy-stable-jax.readthedocs.io/en/latest/"
repository = "https://github.com/tjhunter/levy-stable-jax"
keywords = ["levy", "stable", "jax", "probability", "statistics"]

# The core dependencies
[tool.poetry.dependencies]
python = ">=3.10,<3.13"
jax = "^0.4"
jaxlib = "^0.4.26"
numpy = "^1.19" 
scipy = "^1.5"
pymc = {version="^5.13.1", optional=true}
numpyro = {version="^0.14.0", optional=true}
jaxopt = {version="^0.8", optional=true}

[tool.poetry.extras]
pymc = ["pymc", "numpyro"]
inference = ["jaxopt"]

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.0"
sphinx = "^7.3.7"
sphinx-rtd-theme = "^2.0.0"
mkdocs-material = "^9.5.19"
mkdocstrings = {extras = ["python"], version = "^0.24.3"}
pytkdocs = {version = "^0.16.1", extras = ["numpy-style"]}

[tool.poetry.group.dev.dependencies]
black = "^24.4.0"
mypy = "^1.9.0"
ruff = "^0.4.1"
hypothesis = "^6.100.1"
pytest = "^8.1.1"
absl-py = "^2.1.0"
scikit-learn = "^1.4.2"
# Interactive sessions
jupyter = "^1.0.0"
seaborn = "^0.13.2"



[tool.poetry.group.pymc.dependencies]
pytensor = "^2.20.0"

[tool.pytest.ini_options]
#addopts = "--cov --cov-report html --cov-report term-missing --cov-fail-under 95"
minversion = "7.0"
testpaths = [
    "tests",
]
pythonpath = [
    "src",
]


[tool.coverage.run]
source = ["src"]

[tool.ruff]

line-length = 100
# 1. Enable flake8-bugbear (`B`) rules, in addition to the defaults.
lint.select = ["E", "F", "B", "Q"]

# 2. Avoid enforcing line-length violations (`E501`)
# ignore = ["E501"]
